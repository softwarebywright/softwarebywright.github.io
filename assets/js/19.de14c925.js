(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{249:function(t,s,e){"use strict";e.r(s);var a=e(3),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"page-title"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#page-title","aria-hidden":"true"}},[t._v("#")]),t._v(" "+t._s(t.$page.title))]),t._v(" "),e("center",[e("strong",[t._v(t._s(t.$page.readingTime.text))])]),t._v(" "),e("p",[e("strong",[t._v("Required Software")])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.docker.com/get-started",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"}},[t._v("NodeJS"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"what-is-api-testing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#what-is-api-testing","aria-hidden":"true"}},[t._v("#")]),t._v(" What is API Testing?")]),t._v(" "),e("p",[t._v("Before developing a sandbox for API Testing what it is and its importance. API Testing, generally speaking, allows validation of endpoints and their results within an API. This validation can consist of checking status codes, the response body, the response headers, and many more attributes of the request. Before the end of this post, you will have stood up a fake API using Docker, as well as tested said API using JavaScript.")]),t._v(" "),e("h2",{attrs:{id:"why-javascript-for-api-testing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#why-javascript-for-api-testing","aria-hidden":"true"}},[t._v("#")]),t._v(" Why JavaScript for API Testing?")]),t._v(" "),e("p",[t._v("JavaScript has undoubtedly one of the largest development communities around. As a result, creating API Testing framework in the language ends up being a fairly simple task. If you're curious of what setting up an API Testing framework looks like in JavaScript check out my previous post "),e("a",{attrs:{href:"/blog/posts/javascript-api-testing"}},[t._v("here")]),t._v(". Given the previously mentioned, JavaScript and the libraries that surround it can make a great API testing framework.")]),t._v(" "),e("h2",{attrs:{id:"why-create-an-api-testing-sandbox"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#why-create-an-api-testing-sandbox","aria-hidden":"true"}},[t._v("#")]),t._v(" Why create an API Testing Sandbox?")]),t._v(" "),e("p",[t._v("Sandboxes are a great way to practice in any given programmatic subject. Whether you are a beginner or a seasoned vet a place to practice writing tests is significant. So let's jump into development!")]),t._v(" "),e("h2",{attrs:{id:"sandbox-setup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sandbox-setup","aria-hidden":"true"}},[t._v("#")]),t._v(" Sandbox Setup")]),t._v(" "),e("h3",{attrs:{id:"enter-httpbin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#enter-httpbin","aria-hidden":"true"}},[t._v("#")]),t._v(" Enter httpbin")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://httpbin.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("Httpbin"),e("OutboundLink")],1),t._v(" is a simple HTTP service created by "),e("a",{attrs:{href:"https://www.kennethreitz.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kenneth Reitz"),e("OutboundLink")],1),t._v(" that once running allows the user to send requests and get back specified responses. This means that using Httpbin we can return status codes, headers, or even response bodies as we see fit.")]),t._v(" "),e("p",[t._v("To get started with this service we will need to run it using docker. First ensure that you have "),e("a",{attrs:{href:"https://www.docker.com/get-started",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker installed"),e("OutboundLink")],1),t._v(", then using the following command to start the service.")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("docker run -p "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8001")]),t._v(":80 --name httpbin kennethreitz/httpbin\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("The command above will start the httpbin service on port 8001 of your machine, if you visit "),e("a",{attrs:{href:"http://localhost:8001",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:8001"),e("OutboundLink")],1),t._v(" you can see UI of the httpbin service. Feel free to familiarize yourself with the UI by clicking around and trying some requests to see what responses you get back. For example under "),e("strong",[t._v("HTTP Methods")]),t._v(" you can try the "),e("strong",[t._v("/get")]),t._v(" request. You should get the following response back if you click "),e("strong",[t._v("Try it out")]),t._v(" and then click "),e("strong",[t._v("Execute")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('Curl: curl -X GET "http://localhost:8001/get" -H "accept: application/json"\n\nRequest URL: http://localhost:8001/get\n\nCode 200\n\nResponse body\n\n{\n  "args": {},\n  "headers": {\n    "Accept": "application/json",\n    "Accept-Encoding": "gzip, deflate, br",\n    "Accept-Language": "en-US,en;q=0.9",\n    "Connection": "keep-alive",\n    "Cookie": "_ga=GA1.1.1242642017.1556946873; _gid=GA1.1.402070062.1556946873",\n    "Host": "localhost:8001",\n    "Referer": "http://localhost:8001/",\n    "User-Agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) snap Chromium/73.0.3683.103 Chrome/73.0.3683.103 Safari/537.36"\n  },\n  "origin": "172.17.0.1",\n  "url": "http://localhost:8001/get"\n}\n\nResponse headers\n access-control-allow-credentials: true\n access-control-allow-origin: *\n connection: keep-alive\n content-length: 569\n content-type: application/json\n date: Sun, 05 May 2019 20:51:17 GMT\n server: gunicorn/19.9.0\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br")])]),e("p",[t._v("Great! Now that we have httpbin setup we can write some tests against it to practice our API Test writing skills.")]),t._v(" "),e("h3",{attrs:{id:"setting-up-our-testing-framework"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-our-testing-framework","aria-hidden":"true"}},[t._v("#")]),t._v(" Setting up our testing framework")]),t._v(" "),e("p",[t._v("Here we will be doing the minimum setup to write API Tests, to see a more complex API test setup check out my "),e("a",{attrs:{href:"/blog/post/javascript-api-testing"}},[t._v("previous post")]),t._v(".")]),t._v(" "),e("p",[t._v("First, we need to create a project, run the following commands from your terminal:")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" api-sandbox\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" api-sandbox\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" init -y\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("Next, we will need to install some dependencies to write our API tests. We will be using "),e("a",{attrs:{href:"https://jestjs.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jest"),e("OutboundLink")],1),t._v(" as our testing framework and "),e("a",{attrs:{href:"https://github.com/visionmedia/supertest",target:"_blank",rel:"noopener noreferrer"}},[t._v("supertest"),e("OutboundLink")],1),t._v(" as our API assertion library. So while in the "),e("strong",[t._v("api-sandbox")]),t._v(" directory run the following command to install the following dev dependencies:")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -D supertest jest\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("Then update your "),e("strong",[t._v("package.json")]),t._v(" file to allow running your test suite when "),e("strong",[t._v("npm test")]),t._v(" is run from the terminal.")]),t._v(" "),e("div",{staticClass:"language-json line-numbers-mode"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ..."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"test"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jest"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ...\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[t._v("Great! You're now ready to start writing API tests against the httpbin server that we previously stood up. Let's start with a simple test against "),e("strong",[t._v("/get")]),t._v(" endpoint mentioned earlier. We can start by making a "),e("strong",[t._v("spec")]),t._v(" file and writing our test inside it, we'll name it "),e("strong",[t._v("httpbin.spec.js")]),t._v(". By default when you run jest it will search for all files that end in "),e("strong",[t._v(".spec.js")]),t._v(" and execute the tests within them.")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ./httpbin.spec.js")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" supertest "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"supertest"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("describe")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"httpbin API tests"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("it")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"should return 200 from the /get endpoint"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("supertest")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:8001"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/get"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// validate the status code")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"application/json"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// validate a header")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("response")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" body "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" response"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("body"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBe")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:8001/get"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// validate the body contains a url property")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br")])]),e("p",[t._v("Once you are done writing the test run the following command in your terminal to run your tests.")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("That's it! You now can write tests against a fake server in JavaScript and validate your results. I would highly encourage you to read more documentation on the possible assertions that supertest and jest provide as well as explore the different requests that you can make to httpbin through their UI. All of the code, as well as instructions for managing the httpbin service, can be found "),e("a",{attrs:{href:"https://github.com/softwarebywright/api-testing-sandbox",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),e("OutboundLink")],1),t._v(" as well as in the resources down below.")]),t._v(" "),e("p",[e("strong",[t._v("Resources")])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://jestjs.io/docs/en/getting-started.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jest Documentation"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/visionmedia/supertest",target:"_blank",rel:"noopener noreferrer"}},[t._v("Supertest Documenation"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"share"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#share","aria-hidden":"true"}},[t._v("#")]),t._v(" Share "),e("social",{attrs:{url:t.$page.path}})],1),t._v(" "),e("hr"),t._v(" "),e("comments",{attrs:{shortname:"softwarewright",identifier:"api_testing_sandbox",url:t.$page.path}})],1)}),[],!1,null,null,null);s.default=n.exports}}]);